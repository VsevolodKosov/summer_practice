{"name": "test_product_post_quantity[some quantity]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 201\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_product_post_body.TestProductBody object at 0x000001FDA41DFE90>, quantity = 'some quantity'\nget_product_generator = <source.generators.product.Product object at 0x000001FDA2F58450>\n\n    @pytest.mark.parametrize(\"quantity\", [15, \"some quantity\"])\n    def test_product_post_quantity(self, quantity, get_product_generator):\n        url = \"http://localhost:7070/api/v1/products/post\"\n        data = get_product_generator.set_quantity(lie=False, quantity=quantity).build()\n        response = requests.post(url, data)\n>       assert response.status_code == 201\nE       assert 404 == 201\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\product\\test_product_post_body.py:34: AssertionError"}, "parameters": [{"name": "quantity", "value": "'some quantity'"}], "start": 1720548365999, "stop": 1720548366005, "uuid": "079b98f3-a502-49bc-a079-9c3ed0447ed6", "historyId": "a5622e067e46dd1ac8b5b4e260878ad9", "testCaseId": "2bc55c453db6c4119cd219f455e624ce", "fullName": "tests.product.test_product_post_body.TestProductBody#test_product_post_quantity", "labels": [{"name": "parentSuite", "value": "tests.product"}, {"name": "suite", "value": "test_product_post_body"}, {"name": "subSuite", "value": "TestProductBody"}, {"name": "host", "value": "DESKTOP-K08EACJ"}, {"name": "thread", "value": "23916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.product.test_product_post_body"}]}